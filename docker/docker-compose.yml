version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: recipe_db
    restart: always
    ports:
      - "5430:5432"
    environment:
      POSTGRES_USER: recipe_user
      POSTGRES_PASSWORD: recipe_password
      POSTGRES_DB: recipe_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
    networks:
      - recipe_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U recipe_user -d recipe_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ../server
      dockerfile: Dockerfile
    container_name: recipe_backend
    restart: always
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: recipe_db
      DB_USER: recipe_user
      DB_PASSWORD: recipe_password
      JWT_SECRET: your_jwt_secret_key_here
    volumes:
      - backend_uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - recipe_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ../client
      dockerfile: Dockerfile
    container_name: recipe_frontend
    restart: always
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - recipe_network

volumes:
  postgres_data:
  backend_uploads:

networks:
  recipe_network:
    driver: bridge
